package com.pi.xerosync.xeroservice;

import com.pi.xerosync.PatriciaDbAbstractTest;
import com.pi.xerosync.common.InvoiceDataExtractor;
import com.pi.xerosync.common.PatriciaInvoice;
import com.pi.xerosync.common.TransactionType;
import com.pi.xerosync.dbconnect.DbTestUtils;
import com.pi.xerosync.dbservice.PatriciaExactPSJournalGateway;
import com.rossjourdain.XeroClientException;
import com.rossjourdain.XeroClientUnexpectedException;
import com.rossjourdain.jaxb.Contact;
import com.rossjourdain.jaxb.CreditNote;
import com.rossjourdain.jaxb.Invoice;
import com.rossjourdain.jaxb.LineItem;

import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;

/**
 * User: Thomas Haines; Date: 20/02/14
 */
public class XeroFromPatriciaTransformerImplHeaderTest extends PatriciaDbAbstractTest {

  protected PatriciaExactPSJournalGateway exactTableGateway;
  protected InvoiceDataExtractor invoiceDataExtractor;
  protected XeroFromPatriciaTransformer xeroFromPatriciaTransformer;

  @BeforeMethod
  public void setUp() throws IOException, SQLException {
    super.setup(new GatewayModule());
    exactTableGateway = injector.getInstance(PatriciaExactPSJournalGateway.class);
    invoiceDataExtractor = injector.getInstance(InvoiceDataExtractor.class);
    xeroFromPatriciaTransformer = injector.getInstance(XeroFromPatriciaTransformer.class);
  }

  @AfterMethod
  public void tearDown() {
    super.tearDown();
  }

  @Test
  public void testAreTotalsEqual20103() throws Exception {
    final Integer invoiceNum = new Integer(20103);
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:08:33.0', null, 0, N'I', N'62', N'2', N'14', N'20103', N'', N'140201', N'', null, N'', N'6590', null, N'', null, N'USD', N'1.000000', null, N'2590.16', N'140201', N'140501', N'0', N'0', null, N'95968', null, null, N'', null, N'', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 290467, null, null, null, null, null, null, null, N'Chile associates charge (Inv. no. 95968)', null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:08:33.0', null, 1, N'I', N'62', N'2', N'14', N'20103', N'T31895CL00', N'140201', null, null, N'', N'6590', null, N'1295.08', null, N'USD', N'1.110730', null, N'2590.16', null, null, N'0', N'0', null, null, null, null, N'T', N'CL', N'1', null, null, N'AB', null, null, null, null, null, N'PROMEGA-7', null, null, null, null, null, null, null, null, 290467, 60564, null, N'X41', N'BS', null, null, N'D', N'Chile associates charge (Inv. no. 95968)', null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:08:33.0', null, 2, N'I', N'62', N'2', N'14', N'20103', N'T31896CL00', N'140201', null, null, N'', N'6590', null, N'1295.08', null, N'USD', N'1.110730', null, N'2590.16', null, null, N'0', N'0', null, null, null, null, N'T', N'CL', N'1', null, null, N'AB', null, null, null, null, null, N'JINDILLI', null, null, null, null, null, null, null, null, 290467, 60559, null, N'X41', N'BS', null, null, N'D', N'Chile associates charge (Inv. no. 95968)', null, null);");
    final PatriciaInvoice patriciaInvoice = exactTableGateway.getPatriciaInvoice(invoiceNum, null);
    Assert.assertFalse(xeroFromPatriciaTransformer.isCurrencyConversionNeeded(patriciaInvoice));
    final TransactionType
        transactionType =
        invoiceDataExtractor.getTransactionType(patriciaInvoice);
    Assert.assertEquals(transactionType, TransactionType.INVOICE);
    compareTotals(patriciaInvoice, new BigDecimal("2590.16"), transactionType);

  }

  private void compareTotals(PatriciaInvoice patriciaInvoice, BigDecimal expectedTotal,
                             TransactionType transactionType)
      throws IOException, XeroClientException, XeroClientUnexpectedException {
    final BigDecimal headerTotal = xeroFromPatriciaTransformer.getHeaderTotal(patriciaInvoice);
    if (headerTotal.compareTo(expectedTotal) != 0) {
      Assert.fail(String.format("headerTotal %s != %s [expected]", headerTotal, expectedTotal));
    }

    List<LineItem> xeroItems =
        xeroFromPatriciaTransformer
            .extractXeroLineItems(patriciaInvoice, "AU", transactionType, null);

    final BigDecimal
        xeroLineItemTotal =
        xeroFromPatriciaTransformer.getXeroLineItemTotal(xeroItems);
    if (xeroLineItemTotal.compareTo(expectedTotal) != 0) {
      Assert.fail(
          String.format("xeroLineItemTotal %s != %s [expected]", xeroLineItemTotal, expectedTotal));
    }

    Assert.assertTrue(xeroFromPatriciaTransformer.areTotalsEqual(patriciaInvoice, xeroItems, null));

    switch (transactionType) {
      case INVOICE:
        Invoice newInvoice =
            xeroFromPatriciaTransformer
                .createXeroInvoice(patriciaInvoice, new Contact(), xeroItems, "AU", null);
        Assert.assertNotNull(newInvoice);
        Assert.assertEquals(newInvoice.getLineItems().getLineItem().size(), xeroItems.size());
        break;
      case CREDIT_NOTE:
        CreditNote creditNote =
            xeroFromPatriciaTransformer
                .createXeroCreditNote(patriciaInvoice, new Contact(), xeroItems, "AU", null);
        Assert.assertNotNull(creditNote);
        Assert.assertEquals(creditNote.getLineItems().getLineItem().size(), xeroItems.size());
        break;
    }

  }

  @Test
  public void testAreTotalsEqual300066() throws Exception {
    final Integer invoiceNum = new Integer(300066);
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:55:45.747', null, 0, N'V', N'52', N'2', N'14', N'300066', N'P21361AU00', N'140220', N'', null, N'6344', N'', null, null, null, N'EUR', N'1.388096', null, N'260.00', N'140220', N'140306', null, null, null, null, null, null, N'SC', null, null, null, null, null, null, null, null, null, null, N'Drag Head of a Trailing Su', null, N'2004-00', N'', null, null, null, null, null, 290524, 54220, N'', null, null, null, null, null, null, null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:55:45.747', null, 1, N'V', N'52', N'2', N'14', N'300066', N'P21361AU00', N'140220', null, null, N'6344', N'', null, N'-149.28', null, N'EUR', N'1.388096', null, null, null, null, N'4', N'0', null, N'1', null, null, N'P', N'AU', N'-16.00', null, null, N'AF', null, null, null, null, null, N'Drag Head of a Trailing Su', N'1003', N'2004-00', N'', null, null, null, null, null, 290524, 54220, N'', N'W0030', N'GV', null, null, N'T', null, null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:55:45.747', null, 2, N'V', N'52', N'2', N'14', N'300066', N'P21361AU00', N'140220', null, null, N'6344', N'', null, N'260.00', null, N'EUR', N'1.388096', null, null, null, null, N'4', N'0', null, N'1', null, null, N'P', N'AU', N'1.00', null, null, N'AF', null, null, null, null, null, N'Drag Head of a Trailing Su', N'1003', N'2004-00', N'', null, null, null, null, null, 290524, 54220, N'', N'L1670', N'GV', null, null, N'S', null, null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 10:55:45.747', null, 3, N'V', N'52', N'2', N'14', N'300066', N'P21361AU00', N'140220', null, null, N'6344', N'', null, N'149.28', null, N'EUR', N'1.388096', null, null, null, null, N'4', N'0', null, N'1', null, null, N'P', N'AU', N'16.00', null, null, N'AF', null, null, null, null, null, N'Drag Head of a Trailing Su', N'1003', N'2004-00', N'', null, null, null, null, null, 290524, 54220, N'', N'5000', N'GV', null, null, N'T', null, null, null);");
    final PatriciaInvoice patriciaInvoice = exactTableGateway.getPatriciaInvoice(invoiceNum, null);
    Assert.assertTrue(xeroFromPatriciaTransformer.isCurrencyConversionNeeded(patriciaInvoice));
    final BigDecimal headerTotal = xeroFromPatriciaTransformer.getHeaderTotal(patriciaInvoice);
    final TransactionType
        transactionType =
        invoiceDataExtractor.getTransactionType(patriciaInvoice);
    Assert.assertEquals(transactionType, TransactionType.INVOICE);
    compareTotals(patriciaInvoice, new BigDecimal("187.31"), transactionType);

  }

  @Test
  public void testAreTotalsEqual300067() throws Exception {
    final Integer invoiceNum = new Integer(300067);
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 11:00:37.88', null, 0, N'V', N'52', N'2', N'14', N'300067', N'TS31271AU00', N'140220', N'', null, N'33390', N'', null, null, null, N'USD', N'1.007597', null, N'1160.00', N'140220', N'140306', null, null, null, null, null, null, N'BS', null, null, null, null, null, null, null, null, null, null, N'Australian Trade Mark Sear', null, null, N'', null, null, null, null, null, 290535, 60842, N'', null, null, null, null, null, null, null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 11:00:37.88', null, 1, N'V', N'52', N'2', N'14', N'300067', N'TS31271AU00', N'140220', null, null, N'33390', N'', null, N'860.00', null, N'USD', N'1.007597', null, null, null, null, N'4', N'0', null, N'1', null, null, N'TS', N'AU', N'1.00', null, null, N'SA', null, null, null, null, null, N'Australian Trade Mark Sear', N'1110', null, N'', null, null, null, null, null, 290535, 60842, N'', N'L2263', N'BS', null, null, N'S', null, null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-20 11:00:37.88', null, 2, N'V', N'52', N'2', N'14', N'300067', N'TS31271AU00', N'140220', null, null, N'33390', N'', null, N'300.00', null, N'USD', N'1.007597', null, null, null, null, N'4', N'0', null, N'1', null, null, N'TS', N'AU', N'1.00', null, null, N'SA', null, null, null, null, null, N'Australian Trade Mark Sear', N'1110', null, N'', null, null, null, null, null, 290535, 60842, N'', N'X32', N'BS', null, null, N'D', null, null, null);");
    final PatriciaInvoice patriciaInvoice = exactTableGateway.getPatriciaInvoice(invoiceNum, null);
    Assert.assertTrue(xeroFromPatriciaTransformer.isCurrencyConversionNeeded(patriciaInvoice));
    final BigDecimal headerTotal = xeroFromPatriciaTransformer.getHeaderTotal(patriciaInvoice);
    final TransactionType
        transactionType =
        invoiceDataExtractor.getTransactionType(patriciaInvoice);
    Assert.assertEquals(transactionType, TransactionType.INVOICE);
    compareTotals(patriciaInvoice, new BigDecimal("1151.25"), transactionType);

  }

  @Test
  public void testHandleNoExchangeIncomingH20567() throws Exception {
    // This is where Patricia did not set the exchange rate, it is a creditor, and all workcodes are the same
    final Integer invoiceNum = 20567;
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-06-25 12:30:17.93', null, 0, N'I', N'62', N'6', N'14', N'20567', N'', N'140624', N'', null, N'', N'30811', null, N'', null, N'USD', N'1.000000', null, N'600.00', N'140624', N'140924', N'0', N'0', null, N'0001-00005721', null, null, N'', null, N'', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 355164, null, null, null, null, null, null, null, N'Argentina''s Attorney''s Charges (Inv no.0001-00005721)', null, N'');");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-06-25 12:30:17.93', null, 1, N'I', N'62', N'6', N'14', N'20567', N'T31584AR03', N'140624', null, null, N'', N'30811', null, N'160.12', null, N'USD', N'1.000000', null, N'600.00', null, null, N'0', N'0', null, null, null, null, N'T', N'AR', N'1', null, null, N'AB', null, null, null, null, null, N'JINDILLI', null, null, null, null, null, null, null, null, 355164, 59344, null, N'X41', N'KJM', N'KJM', null, N'D', N'Argentina''s Attorney''s Charges (Inv no.0001-00005721)', null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-06-25 12:30:17.93', null, 2, N'I', N'62', N'6', N'14', N'20567', N'T31584AR29', N'140624', null, null, N'', N'30811', null, N'160.12', null, N'USD', N'1.000000', null, N'600.00', null, null, N'0', N'0', null, null, null, null, N'T', N'AR', N'1', null, null, N'AB', null, null, null, null, null, N'JINDILLI', null, null, null, null, null, null, null, null, 355164, 59345, null, N'X41', N'KJM', N'KJM', null, N'D', N'Argentina''s Attorney''s Charges (Inv no.0001-00005721)', null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-06-25 12:30:17.93', null, 3, N'I', N'62', N'6', N'14', N'20567', N'T31584AR30', N'140624', null, null, N'', N'30811', null, N'160.12', null, N'USD', N'1.000000', null, N'600.00', null, null, N'0', N'0', null, null, null, null, N'T', N'AR', N'1', null, null, N'AB', null, null, null, null, null, N'JINDILLI', null, null, null, null, null, null, null, null, 355164, 59346, null, N'X41', N'KJM', N'KJM', null, N'D', N'Argentina''s Attorney''s Charges (Inv no.0001-00005721)', null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-06-25 12:30:17.93', null, 4, N'I', N'62', N'6', N'14', N'20567', N'T31584AR31', N'140624', null, null, N'', N'30811', null, N'160.12', null, N'USD', N'1.000000', null, N'600.00', null, null, N'0', N'0', null, null, null, null, N'T', N'AR', N'1', null, null, N'AB', null, null, null, null, null, N'JINDILLI', null, null, null, null, null, null, null, null, 355164, 59347, null, N'X41', N'KJM', N'KJM', null, N'D', N'Argentina''s Attorney''s Charges (Inv no.0001-00005721)', null, null);");
    final PatriciaInvoice patriciaInvoice = exactTableGateway.getPatriciaInvoice(invoiceNum, null);

    final TransactionType
        transactionType =
        invoiceDataExtractor.getTransactionType(patriciaInvoice);
    Assert.assertEquals(transactionType, TransactionType.INVOICE);

    compareTotals(patriciaInvoice, new BigDecimal("600.00"), transactionType);

  }

  @Test
  public void testAreTotalsEqual900006() throws Exception {
    final Integer invoiceNum = 900006;
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-18 15:28:51.98', null, 0, N'V', N'72', N'2', N'14', N'900006', N'GP31065AU00', N'140218', N'', null, N'36120', N'', null, null, null, N'EUR', N'1.380907', null, N'-597.93', N'140218', N'140304', null, null, null, null, null, null, N'LMM', null, null, null, null, null, null, null, null, null, null, N'Assignment of application ', null, null, N'', null, null, null, null, null, 289576, 58047, N'', null, null, null, null, null, null, null, null);");
    DbTestUtils.executeSql(connectionManager.getDataSource(),
                           "INSERT INTO dbo.EXACT_P_S_JOURNAL(PSJ_SAVED_DATE, PSJ_EXPORTED_DATE, PSJ_LINE_NUMBER, PSJ_JOURNAL_TYPE, PSJ_JOURNAL_NUMBER, PSJ_PERIOD, PSJ_FINANCIAL_YEAR, PSJ_ENTRY_NUMBER, PSJ_DESCRIPTION, PSJ_DATE, PSJ_GENERAL_LEDGER_ACCOUNT, PSJ_OFFSET_ACCOUNT, PSJ_DEBTOR_NUMBER, PSJ_CREDITOR_NUMBER, PSJ_OUTSTANDING_INVOICE_NUM, PSJ_AMOUNT, PSJ_JOURNALIZE_FC, PSJ_CURRENCY, PSJ_EXCHANGE_RATE, PSJ_PAYMENT_CHARGE_DISCOUNT, PSJ_AMOUNT_P_C_D, PSJ_DUE_DATE_INVOICE, PSJ_DUE_DATE_PAYMENT, PSJ_VAT_CODE, PSJ_VAT_AMOUNT, PSJ_WEEK_NUMBER, PSJ_PAYMENT_REF, PSJ_PAYMENT_METHOD, PSJ_AMOUNT_BLOCKED_ACCOUNT, PSJ_COST_CENTER, PSJ_COST_UNIT, PSJ_QUANTITY, PSJ_WRITE_OFF_CODE, PSJ_REVERSAL_ENTRY, PSJ_PROJECT_CODE, PSJ_AMOUNT_REVENUE, PSJ_AMOUNT_EXPENSES, PSJ_NUMBER_OF_REVENUES, PSJ_NUMBER_OF_EXPENSES, PSJ_COST_CENTER_2, PSJ_PROJECT_DESCRIPTION, PSJ_COST_CATEGORY, PSJ_JOURNAL_LABEL, PSJ_CATEGORY_TYPE, PSJ_CASE_COUNTRY_CODE, PSJ_CASE_TYPE, PSJ_SAVED_DATE_STR, PSJ_DUE_DATE_INVOICE_STR, PSJ_DUE_DATE_PAYMENT_STR, PSJ_TRANS_ID, PSJ_CASE_ID, PSJ_CHECKSUM, PSJ_WORKCODE, PSJ_LOGINID, PSJ_DEP_COSTCENTER, PSJ_OLD_CASE_ID, PSJ_WORKCODE_TYPE, PSJ_COMMENT, PSJ_LOGINID_REG, PSJ_KID_CODE) VALUES ('2014-02-18 15:28:51.98', null, 1, N'V', N'72', N'2', N'14', N'900006', N'GP31065AU00', N'140218', null, null, N'36120', N'', null, N'-597.93', null, N'EUR', N'1.380907', null, null, null, null, N'4', N'0', null, N'1', null, null, N'GP', N'AU', N'-1.00', null, null, N'Z1', null, null, null, null, null, N'Assignment of application ', N'110', null, N'', null, null, null, null, null, 289576, 58047, N'', N'C0020', N'LMM', null, null, N'T', null, null, null);");
    final PatriciaInvoice patriciaInvoice = exactTableGateway.getPatriciaInvoice(invoiceNum, null);
    Assert.assertTrue(xeroFromPatriciaTransformer.isCurrencyConversionNeeded(patriciaInvoice));
    final TransactionType
        transactionType =
        invoiceDataExtractor.getTransactionType(patriciaInvoice);
    Assert.assertEquals(transactionType, TransactionType.CREDIT_NOTE);
    compareTotals(patriciaInvoice, new BigDecimal("433.00"), transactionType);
  }

}
